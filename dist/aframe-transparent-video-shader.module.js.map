{"version":3,"file":"aframe-transparent-video-shader.module.js","sources":["../index.js"],"sourcesContent":["AFRAME.registerShader('transparent-video', {\n  schema: {\n    src: { type: 'map' },\n  },\n\n  init: function (data) {\n    const videoTexture = new THREE.VideoTexture(data.src);\n    const alphaTexture = new THREE.VideoTexture(data.src);\n\n    videoTexture.format = THREE.RGBAFormat;\n    alphaTexture.format = THREE.AlphaFormat;\n    data.transparent = true;\n\n    this.material = new THREE.ShaderMaterial({\n      vertexShader: `\n        varying vec2 vUv;\n        \n        void main() {\n          vUv = uv;\n          gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n        }\n      `,\n      fragmentShader: `\n        varying vec2 vUv;\n        uniform sampler2D videoTexture;\n        uniform sampler2D alphaTexture;\n\n        void main() {\n          vec4 videoColor = texture2D(videoTexture, vUv);\n          vec4 alphaColor = texture2D(alphaTexture, vUv);\n\n          gl_FragColor = vec4(videoColor.rgb, alphaColor.a);\n        }\n      `,\n      uniforms: {\n        videoTexture: { type: 't', value: videoTexture },\n        alphaTexture: { type: 't', value: alphaTexture },\n      },\n      transparent: true,\n    });\n  },\n});"],"names":["AFRAME","registerShader","schema","src","type","init","data","videoTexture","THREE","VideoTexture","alphaTexture","format","RGBAFormat","AlphaFormat","transparent","this","material","ShaderMaterial","vertexShader","fragmentShader","uniforms","value"],"mappings":"AAAAA,OAAOC,eAAe,oBAAqB,CACzCC,OAAQ,CACNC,IAAK,CAAEC,KAAM,QAGfC,KAAM,SAAUC,GACd,IAAMC,EAAe,IAAIC,MAAMC,aAAaH,EAAKH,KAC3CO,EAAe,IAAIF,MAAMC,aAAaH,EAAKH,KAEjDI,EAAaI,OAASH,MAAMI,WAC5BF,EAAaC,OAASH,MAAMK,YAC5BP,EAAKQ,aAAc,EAEnBC,KAAKC,SAAW,IAAIR,MAAMS,eAAe,CACvCC,aAAY,0LAQZC,eAWC,kVACDC,SAAU,CACRb,aAAc,CAAEH,KAAM,IAAKiB,MAAOd,GAClCG,aAAc,CAAEN,KAAM,IAAKiB,MAAOX,IAEpCI,aAAa,GAEjB"}